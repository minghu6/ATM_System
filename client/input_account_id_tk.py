#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.7
# In conjunction with Tcl version 8.6
#    Mar 29, 2016 11:02:01 AM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import input_account_id_support_tk
"""
################################################################################
在ATM 客户端转账时调用的模块，负责绘制输入转账账号窗口的模块
################################################################################
"""

import minghu6.gui.TkUtil as TkUtil
from minghu6.gui.appearance import showonCenter

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = Input_Transfer_Account_ID (root)
    input_account_id_support_tk.init(root, top)
    showonCenter(root)
    #root.mainloop()

w = None
def create_Input_Transfer_Account_ID(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = Input_Transfer_Account_ID (w)
    input_account_id_support_tk.init(w, top, *args, **kwargs)

    return (w, top)

def destroy_Input_Transfer_Account_ID():
    global w
    w.destroy()
    w = None


class Input_Transfer_Account_ID:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85' 
        _ana2color = '#d9d9d9' # X11 color: 'gray85' 
        font11 = "-family {Lucidia Grande} -size 12 -weight normal -slant roman "  \
            "-underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("433x113+1231+238")
        top.title("输入转账账户 ID")
        top.configure(background="#d9d9d9")


        self.entry_transfer_to_id = Entry(top)
        self.entry_transfer_to_id.place(relx=0.18, rely=0.27, relheight=0.24
                , relwidth=0.77)
        self.entry_transfer_to_id.configure(background="white")
        self.entry_transfer_to_id.configure(disabledforeground="#a3a3a3")
        self.entry_transfer_to_id.configure(font=font11)
        self.entry_transfer_to_id.configure(foreground="#000000")
        self.entry_transfer_to_id.configure(insertbackground="black")
        self.entry_transfer_to_id.configure(width=334)
        self.entry_transfer_to_id.insert(0,'')

        self.btn_ok=TkUtil.Button(top)
        #self.btn_ok = ttk.Button(top)
        self.btn_ok.place(relx=0.14, rely=0.62, height=37, width=97)
        self.btn_ok.configure(takefocus="")
        self.btn_ok.configure(text='''确定''')
        self.btn_ok.configure(width=97)

        self.btn_cancel=TkUtil.Button(top)
        #self.btn_cancel = ttk.Button(top)
        self.btn_cancel.place(relx=0.74, rely=0.62, height=37, width=97)
        self.btn_cancel.configure(takefocus="")
        self.btn_cancel.configure(text='''取消''')
        self.btn_cancel.configure(width=97)

        self.TLabel1 = ttk.Label(top)
        self.TLabel1.place(relx=0.0, rely=0.27, height=21, width=79)
        self.TLabel1.configure(background=_bgcolor)
        self.TLabel1.configure(foreground="#000000")
        self.TLabel1.configure(relief=FLAT)
        self.TLabel1.configure(text='''收款账号''')
        self.TLabel1.configure(width=79)

        self.entry_transfer_to_id.focus()
        self.top=top
        self.register_funcs()


    def close(self):
        """
        程序退出
        :return:
        """
        global w
        w=self.top
        print('')
        destroy_Input_Transfer_Account_ID()

    def return_account_id(self):

        account_id=self.entry_transfer_to_id.get().strip()
        print(account_id)
        self.close()

    def register_funcs(self):
        """
        注册按键与快捷键所绑定的事件
        :return:
        """

        self.btn_ok.configure(command=lambda *args:self.return_account_id())
        self.btn_cancel.configure(command=lambda *args:self.close())

        self.top.bind('<Return>',lambda *args:self.return_account_id())
        self.top.bind('<Escape>',lambda *args:self.close())


if __name__ == '__main__':
    vp_start_gui()



